From 8006220787d8cd6c04bbd4bb418c7c24f78b99e0 Mon Sep 17 00:00:00 2001
From: Steven Allen <steven@stebalien.com>
Date: Wed, 18 Jan 2012 01:45:57 -0500
Subject: [PATCH] Enable discard if requested.

---
 src/cmt-internal.h  |    1 +
 src/crypto-dmc.c    |    2 ++
 src/crypto.c        |    3 +++
 src/libcryptmount.h |    1 +
 src/mtcrypt.c       |    6 ++++++
 5 files changed, 13 insertions(+), 0 deletions(-)

diff --git a/src/cmt-internal.h b/src/cmt-internal.h
index 7747051..d5da974 100644
--- a/src/cmt-internal.h
+++ b/src/cmt-internal.h
@@ -50,6 +50,7 @@ struct ehd_mount_request {
 	unsigned int key_size, trunc_keysize;
 	enum ehd_mtreq_stage last_stage;
 	bool readonly;
+	bool allow_discards;
 };
 
 struct ehd_crypto_ops {
diff --git a/src/crypto-dmc.c b/src/crypto-dmc.c
index 9045e50..1905dc7 100644
--- a/src/crypto-dmc.c
+++ b/src/crypto-dmc.c
@@ -97,6 +97,8 @@ static bool dmc_run(const struct ehd_mount_request *req,
 	}
 	if (req->readonly)
 		flags |= CRYPT_ACTIVATE_READONLY;
+	if (req->allow_discards)
+		flags |= CRYPT_ACTIVATE_ALLOW_DISCARDS;
 
 	ret = crypt_load(cd, CRYPT_LUKS1, NULL);
 	if (ret == 0) {
diff --git a/src/crypto.c b/src/crypto.c
index b992326..05571ca 100644
--- a/src/crypto.c
+++ b/src/crypto.c
@@ -178,6 +178,9 @@ 
 	case EHD_MTREQ_READONLY:
 		rq->readonly = va_arg(args, unsigned int);
 		break;
+	case EHD_MTREQ_ALLOW_DISCARDS:
+		rq->allow_discards = va_arg(args, unsigned int);
+		break;
 	}
 	switch (opt) {
 	case EHD_MTREQ_CONTAINER
diff --git a/src/libcryptmount.h b/src/libcryptmount.h
index 8f38042..98ce39b 100644
--- a/src/libcryptmount.h
+++ b/src/libcryptmount.h
@@ -69,6 +69,7 @@ enum ehd_mtreq_opt {
 	EHD_MTREQ_TRUNC_KEYSIZE,
 	EHD_MTREQ_READONLY,
 	EHD_MTREQ_CRYPTONAME,
+	EHD_MTREQ_ALLOW_DISCARDS,
 };
 
 enum ehd_mtinfo_opt {
diff --git a/src/mtcrypt.c b/src/mtcrypt.c
index c3261ca..743e10c 100644
--- a/src/mtcrypt.c
+++ b/src/mtcrypt.c
@@ -56,6 +56,7 @@ struct mount_options {
 	bool is_cont;
 	bool blkdev;
 	bool fsck;
+	bool allow_discards;
 	bool remount;
 };
 
@@ -158,6 +159,8 @@ static void mtcr_parse_suboptions(const struct HXoptcb *cbi)
 		/* Options added to passthrough, but also inspected by us. */
 		if (strcmp(key, "remount") == 0)
 			mo->remount = true;
+        else if (strcmp(key, "discard") == 0)
+			mo->allow_discards = true;
 		else if (strcmp(key, "ro") == 0)
 			mo->readonly = EHD_LOSETUP_RO;
 		else if (strcmp(key, "rw") == 0)
@@ -448,6 +451,9 @@ static int mtcr_mount(struct mount_options *opt)
 	ret = ehd_mtreq_set(mount_request, EHD_MTREQ_READONLY, opt->readonly);
 	if (ret < 0)
 		goto out_r;
+	ret = ehd_mtreq_set(mount_request, EHD_MTREQ_ALLOW_DISCARDS, opt->allow_discards);
+	if (ret < 0)
+		goto out_r;
 	/* Hack for CRYPT_PLAIN: default to 256 */
 	trunc_keysize = 256 / CHAR_BIT;
 	ret = ehd_mtreq_set(mount_request, EHD_MTREQ_TRUNC_KEYSIZE, trunc_keysize);
-- 
1.7.8.3

